@using AnimeLover.Event
@inherits LayoutComponentBase
<Layout>
    <LayoutHeader>
        <Bar Breakpoint="Breakpoint.Desktop"
             Background="Background.Dark"
             ThemeContrast="ThemeContrast.Dark">
            <a class="navbar-brand" href="/">
                首页
            </a>
            <BarMenu>
                <BarStart>
                    <BarItem>
                        <BarLink To="netdisk">浏览</BarLink>
                    </BarItem>
                    <BarItem>
                        <BarLink To="javascript:;" @onclick="@setting.ShowModal">设置</BarLink>
                    </BarItem>

                </BarStart>
                <BarEnd>
                    <BarItem>
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <button class="btn btn-secondary" type="button" id="button-addon2">
                                    <Icon Name="IconName.Search"></Icon>
                                </button>
                            </div>
                            <input type="text" class="form-control" placeholder="输入关键字以搜索...">
                        </div>
                    </BarItem>
                    <BarItem Class="ml-4">
                        <BarLink To="javascript:;" @onclick="@Close">
                            <Icon Name="Blazorise.Icons.FontAwesome.FontAwesomeIcons.PowerOff"></Icon>
                        </BarLink>
                    </BarItem>
                </BarEnd>
            </BarMenu>
        </Bar>
    </LayoutHeader>
    <LayoutContent>
        <Alert Color="Color.Warning" Visible="!setting.SysInited">
            <AlertMessage>警告</AlertMessage>
            <AlertDescription>系统尚未进行初始化配置，<a href="javascript:;" @onclick="@setting.ShowModal">点击这里</a>进行配置！</AlertDescription>
        </Alert>
        @Body
        <Cornor />
    </LayoutContent>
</Layout>
<Setting @ref="setting" OnSave="SettingSaved"></Setting>
@code {
    Setting setting;

    private void SettingSaved()
    {
        this.StateHasChanged();

    }

    private void Close()
    {
        Environment.Exit(0);
    }
}
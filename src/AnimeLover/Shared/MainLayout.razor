@using AnimeLover.Event
@inherits LayoutComponentBase
@inject NavigationManager navigationManager
<Layout Sider="true">
  <LayoutSider >
    <LayoutSiderContent >
        <Bar @ref="sidebar" Mode="BarMode.VerticalSmall"
            CollapseMode="BarCollapseMode.Small"
            Breakpoint="Breakpoint.Desktop"
            NavigationBreakpoint="Breakpoint.Desktop"
            ThemeContrast="ThemeContrast.Dark"
            >
            <BarMenu>
                <BarStart>
                    <a class="navbar-brand" href="/">
                        <img src="/images/app.ico" style="width:60px; "/>
                    </a>
                    <BarMenu>
                        <BarItem class="mt-3">
                            <BarLink To="/">
                                <BarIcon IconName="IconName.Home"  />
                                番剧
                            </BarLink>
                        </BarItem>
                        <BarItem class="mt-3">
                            <BarLink To="netdisk">
                                <BarIcon IconName="@("fa-laptop")"/>
                                文件
                            </BarLink>
                        </BarItem>
                    </BarMenu>
                </BarStart>
            </BarMenu>
        </Bar>
    </LayoutSiderContent>
  </LayoutSider>
  <Layout>
    <LayoutHeader Fixed="true">
            <Bar Breakpoint="Breakpoint.Desktop"
            Background="Background.Dark"
            ThemeContrast="ThemeContrast.Dark">

            <BarMenu>
                <BarStart>
                    <BarItem>
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <button class="btn btn-secondary" type="button" @onclick="@Search">
                                    <Icon Name="IconName.Search"></Icon>
                                </button>
                            </div>
                            <input type="text" @bind-value="@Keyword" class="form-control" placeholder="输入关键字以搜索..." @onkeyup="@InputKeyUp">
                        </div>
                    </BarItem>
                </BarStart>
                <BarEnd>
                    <BarItem>
                        <BarLink To="javascript:;" @onclick="@setting.ShowModal">
                            <Icon Name="Blazorise.Icons.FontAwesome.FontAwesomeIcons.Cog"></Icon>
                        </BarLink>
                    </BarItem>
                    <BarItem Class="ml-3">
                        <BarLink To="javascript:;" @onclick="@FullScreen">
                            <Icon Name="Blazorise.Icons.FontAwesome.FontAwesomeIcons.WindowMaximize"></Icon>
                        </BarLink>
                    </BarItem>

                    <BarItem Class="ml-3">

                        <BarLink To="javascript:;" @onclick="@Close">
                            <Icon Name="Blazorise.Icons.FontAwesome.FontAwesomeIcons.PowerOff"></Icon>
                        </BarLink>
                    </BarItem>
                </BarEnd>
            </BarMenu>
        </Bar>
    </LayoutHeader>
    <LayoutContent>
        <Alert Color="Color.Warning" Visible="!setting.SysInited">
        <MessageProvider>警告</MessageProvider>
        <AlertDescription>系统尚未进行初始化配置，<a href="javascript:;" @onclick="@setting.ShowModal">点击这里</a>进行配置！</AlertDescription>
        </Alert>
        @Body
        <Cornor @ref=cornor />
    </LayoutContent>
  </Layout>
</Layout>

<Setting @ref="setting" OnSave="SettingSaved"></Setting>
@code {
    private Bar sidebar;

    protected override void OnInitialized()
    {
        SysEvent.CornorStateChange -= OnCornorChanged;
        SysEvent.CornorStateChange += OnCornorChanged;
    }

    Cornor cornor;
    private void OnCornorChanged(bool display)
    {
        cornor.Display(display);
        
    } 

    Setting setting;

    private void SettingSaved()
    {
        this.StateHasChanged();
    }

    public bool CornorHiden { get; set; } = false;

    private void Close()
    {
        //关闭前保存浏览地址
        if (null != BlazorApp.Config)
        {
            BlazorApp.Config.LatestLocation = FsTool.Path;
            BlazorApp.Database.Updateable(BlazorApp.Config).ExecuteCommand();
        }
        Environment.Exit(0);
    }

    private void InputKeyUp(KeyboardEventArgs e)
    {
        if(e.Key == "Enter")
        {
            Search();
        }
    }

    private string Keyword { get; set; }

    private void Search()
    {
        navigationManager.NavigateTo("/home/"+ Keyword);
    }

    private void FullScreen()
    {
        SysEvent.NotifyFullScreenToggle();
    }
}